{"version":3,"file":"static/js/887.022c367a.chunk.js","mappings":"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","sources":["components/TablePaleoModal/TablePaleoModal.jsx","components/TablePaleo/TablePaleo.jsx","views/TableView.jsx"],"sourcesContent":["import { useEffect, Suspense } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Bars } from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './TablePaleoModal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nlet Body = document.querySelector('body');\r\n\r\nexport default function Modal({ onClose, info }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n      Body.style.overflowY = 'auto';\r\n      console.log('body');\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n      Body.style.overflowY = 'auto';\r\n      console.log('body');\r\n    }\r\n  };\r\n\r\n  const handelClickBtn = () => {\r\n    onClose();\r\n    Body.style.overflowY = 'auto';\r\n  };\r\n\r\n  function img(info) {\r\n    // default img https://drive.google.com/file/d/1Hb7Hb0qgDDdvvF2TbADAv1HsmAgCOFvr/view?usp=sharing\r\n    if (typeof info.small_foto === 'string') {\r\n      const url = info.small_foto.split('/');\r\n      const srcUrl = `https://drive.google.com/uc?export=view&id=${url[5]}`;\r\n      return srcUrl;\r\n    } else {\r\n      return `https://drive.google.com/uc?export=view&id=1Hb7Hb0qgDDdvvF2TbADAv1HsmAgCOFvr`;\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal__content\">\r\n        <Suspense fallback={<Bars color=\"#00BFFF\" height={80} width={80} />}>\r\n          <a\r\n            href={info.foto}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"ModalRefImg\"\r\n          >\r\n            <img src={img(info)} alt=\"Object Foto\" className=\"ModalImg\" />\r\n          </a>\r\n        </Suspense>\r\n\r\n        <ul className=\"List_modal\">\r\n          <li>\r\n            <b>Поселення:</b> {info.settlement}\r\n          </li>\r\n          <li>\r\n            <b>Район:</b> {info.district}\r\n          </li>\r\n          <li>\r\n            <b>Область:</b> {info.region}\r\n          </li>\r\n          <li>\r\n            <b>Широта:</b> {info.y}\r\n          </li>\r\n          <li>\r\n            <b>Довгота:</b> {info.x}\r\n          </li>\r\n          <li>\r\n            <b>Природна зона:</b> {info.natural_zones}\r\n          </li>\r\n          <li>\r\n            <b>Край/провінція:</b> {info.physiographical_l}\r\n          </li>\r\n          <li>\r\n            <b>Приуроченість(природна/історична):</b> {info.locality}\r\n          </li>\r\n          <li>\r\n            <b>Обє'кт (природний/історичний):</b> {info.object}\r\n          </li>\r\n          <li>\r\n            <b>Дослідник:</b> {info.researcher}\r\n          </li>\r\n          <li>\r\n            <b>Рік вивчення:</b> {info.year}\r\n          </li>\r\n          <li>\r\n            <b>Використані методи дослідження:</b> {info.research_methods}\r\n          </li>\r\n          <li>\r\n            <b>Сучасний тип ґрунту:</b> {info.modern_soil}\r\n          </li>\r\n          <li>\r\n            <b>Потужність розірзу (м.):</b> {info.soil_m}\r\n          </li>\r\n          <li>\r\n            <b>Похований ґрунт:</b> {info.buried_soil}\r\n          </li>\r\n          <li>\r\n            <b>Потужність (м.):</b> {info.paleosoil_m}\r\n          </li>\r\n          <li>\r\n            <b>Хроноітервал голоцену:</b> {info.period_holocene}\r\n          </li>\r\n          <li>\r\n            <b>Археологічне датування/ датування:</b> {info.arch_dating}\r\n          </li>\r\n          <li>\r\n            <b>Література:</b> {info.references}\r\n          </li>\r\n          <li>\r\n            <b>Документ PDF:</b>\r\n            <a href={info.pdf} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {info.pdf}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <CloseIcon onClick={handelClickBtn} className=\"BtnClose\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Paper,\r\n  Button,\r\n  Box,\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport { ThreeCircles } from 'react-loader-spinner';\r\nimport TablePaleoModal from '../TablePaleoModal/TablePaleoModal';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport {\r\n  getAllPaleosoilPoint,\r\n  fetchPaleosoilPoint,\r\n  deletePaleosoilPoint,\r\n  getLoading,\r\n} from '../../redux/paleosoil';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = event => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst columns = [\r\n  { id: 'id', label: '№', minWidth: 70, align: 'left' },\r\n  { id: 'settlement', label: 'Населений пункт', minWidth: 100, align: 'left' },\r\n  { id: 'district', label: 'Район', minWidth: 100, align: 'left' },\r\n  { id: 'region', label: 'Область', minWidth: 100, align: 'left' },\r\n  { id: 'natural_zones', label: 'Природна зона', minWidth: 100, align: 'left' },\r\n  { id: 'researcher', label: 'Дослідник', minWidth: 100, align: 'left' },\r\n  { id: 'year', label: 'Рік вивчення', minWidth: 100, align: 'left' },\r\n];\r\n\r\n// Styling table\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableCell: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nlet Body = document.querySelector('body');\r\n\r\nexport default function TablePaleo() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const data = useSelector(getAllPaleosoilPoint);\r\n  const loading = useSelector(getLoading);\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const dispatch = useDispatch();\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [infoResearch, setInfoResearch] = React.useState({});\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n    if (showModal === 'false') {\r\n      Body.style.overflowY = 'auto';\r\n    } else {\r\n      Body.style.overflowY = 'hidden';\r\n    }\r\n  };\r\n\r\n  const onClickItem = e => {\r\n    setInfoResearch(e);\r\n    toggleModal();\r\n  };\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPaleosoilPoint());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <TablePaleoModal onClose={toggleModal} info={infoResearch} />\r\n      )}\r\n      {loading ? (\r\n        <ThreeCircles\r\n          height=\"100\"\r\n          width=\"100\"\r\n          color=\"#4fa94d\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"\"\r\n          visible={true}\r\n          ariaLabel=\"three-circles-rotating\"\r\n          outerCircleColor=\"\"\r\n          innerCircleColor=\"\"\r\n          middleCircleColor=\"\"\r\n        />\r\n      ) : (\r\n        <TableContainer component={Paper}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{\r\n                      minWidth: column.minWidth,\r\n                      fontWeight: 800,\r\n                      padding: '5px',\r\n                    }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n                ? data.slice(\r\n                    page * rowsPerPage,\r\n                    page * rowsPerPage + rowsPerPage,\r\n                  )\r\n                : data\r\n              ).map(rowData => (\r\n                <TableRow key={rowData._id}>\r\n                  <TableCell\r\n                    style={{ minWidth: 70 }}\r\n                    align=\"center\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.id}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.settlement}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.district}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.region}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.natural_zones}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.researcher}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 70 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.year}\r\n                  </TableCell>\r\n                  <TableCell style={{ minWidth: 80 }} align=\"left\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"success\"\r\n                      onClick={() => onClickItem(rowData)}\r\n                    >\r\n                      Інфо\r\n                    </Button>\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      sx={{ color: '#FF0000' }}\r\n                      onClick={() =>\r\n                        dispatch(deletePaleosoilPoint(rowData._id))\r\n                      }\r\n                      style={\r\n                        isLoggedIn ? { display: 'inline' } : { display: 'none' }\r\n                      }\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            colSpan={3}\r\n            count={data.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            SelectProps={{\r\n              inputProps: {\r\n                'aria-label': 'rows per page',\r\n              },\r\n              native: true,\r\n            }}\r\n            style={{ minWidth: 'max-content' }}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            ActionsComponent={TablePaginationActions}\r\n          />\r\n        </TableContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import TablePaleo from \"../components/TablePaleo/TablePaleo\"\r\n\r\nconst TableView = () => {\r\n    return ( \r\n        <TablePaleo/>\r\n    )\r\n}\r\n\r\nexport default TableView"],"names":["modalRoot","document","querySelector","Body","Modal","onClose","info","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","style","overflowY","console","log","createPortal","className","onClick","event","currentTarget","target","Suspense","fallback","color","height","width","href","foto","rel","src","small_foto","url","split","img","alt","settlement","district","region","y","x","natural_zones","physiographical_l","locality","object","researcher","year","research_methods","modern_soil","soil_m","buried_soil","paleosoil_m","period_holocene","arch_dating","references","pdf","Close","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","Box","sx","flexShrink","ml","IconButton","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","columns","id","label","minWidth","align","useStyles","makeStyles","table","tableCell","padding","TablePaleo","classes","React","setPage","setRowsPerPage","data","useSelector","getAllPaleosoilPoint","loading","getLoading","isLoggedIn","authSelectors","dispatch","useDispatch","showModal","setShowModal","infoResearch","setInfoResearch","toggleModal","emptyRows","length","fetchPaleosoilPoint","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","fontWeight","TableBody","slice","rowData","Button","variant","deletePaleosoilPoint","_id","display","Delete","colSpan","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","value","ActionsComponent"],"sourceRoot":""}
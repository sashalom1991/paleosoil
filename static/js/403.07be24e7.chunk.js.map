{"version":3,"file":"static/js/403.07be24e7.chunk.js","mappings":"wNA0GA,MAjGA,WACE,IAAMA,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,SACR,CAACH,IAEJ,IAAMI,EAAiB,CACrB,eACA,gBACA,eACA,iBACA,mBACA,iBACA,yBAGEC,EAAeD,EAAeE,KAChC,SAAAC,GAAM,OAAIV,EAAKW,QAAO,SAAAC,GAAC,OAAIA,EAAEC,kBAAoBH,KAAQI,UAGrDC,EAAS,CACb,CACEf,KAAM,CACJ,CACEgB,EAAGT,EAAe,GAClBU,EAAGT,EAAa,IAElB,CACEQ,EAAGT,EAAe,GAClBU,EAAGT,EAAa,IAElB,CACEQ,EAAGT,EAAe,GAClBU,EAAGT,EAAa,IAElB,CACEQ,EAAGT,EAAe,GAClBU,EAAGT,EAAa,IAElB,CACEQ,EAAGT,EAAe,GAClBU,EAAGT,EAAa,IAElB,CACEQ,EAAGT,EAAe,GAClBU,EAAGT,EAAa,IAElB,CACEQ,EAAGT,EAAe,GAClBU,EAAGT,EAAa,OAMlBU,EAAU,CACdC,OAAQ,CACNC,MAAM,GAERC,MAAO,CACLC,KAAM,WAERC,MAAO,CACLC,MAAMC,EAAAA,EAAAA,GAAE,iCACRC,MAAO,UAETC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,YAAa,CACXC,QAAS,CACPC,aAAa,EACbC,cAAc,KAKpB,OACE,0BACE,SAAC,IAAD,CACEb,QAASA,EACTH,OAAQA,EACRO,KAAK,UACLU,OAAQ,SCgChB,MA3HA,WACE,IAAMhC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAoBX6B,EAC4B,OAAhCC,aAAaC,QAAQ,OAnBD,CACpB,mDACA,gEACA,2BACA,0GACA,6EACA,2GAGsB,CACtB,uBACA,gBACA,4CACA,SACA,oBACA,uBAMEC,EAAaH,EAAYxB,KAC3B,SAAA4B,GAAI,OAAIrC,EAAKW,QAAO,SAAAC,GAAC,OAAIA,EAAE0B,gBAAkBD,KAAMvB,UAG/CyB,EAAQ,CACZrB,QAAS,CACPC,OAAQ,CACNC,MAAM,GAERC,MAAO,CACLC,KAAM,QACND,MAAO,CACLmB,QAAS,CACPpB,MAAM,EACNqB,QAAS,EACTC,QAAS,EACTC,MAAO,CACLC,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,KAAK,EACLC,MAAO,EACPC,YAAa,IAEfC,OAAQ,CACNC,IAAK,CACHC,cAAUC,EACVC,gBAAiB,IACjBC,eAAgB,WAChBC,YAAa,QACbC,cALG,SAKWC,GACZ,OAAO,IAAIC,KAAKD,GAAWE,iBAG/BC,IAAK,CACHT,cAAUC,GAEZS,IAAK,CACHV,cAAUC,IAGdU,aAAc,UAIpB1C,MAAO,CACLC,MAAMC,EAAAA,EAAAA,GAAE,+BACRC,MAAO,UAETC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,WAEFC,YAAa,CACXsC,IAAK,CACHpC,aAAa,EACbC,cAAc,EACdoC,WAAY,EACZC,SAAU,IACVC,eAAe,EACf5B,QAAS,EACTC,QAAS,EACT4B,YAAa,IAGjBC,OAAQtC,EACRuC,WAAY,CACVC,WAAY,CACVC,KAAM,EACNC,QAAS,MAIf5D,OAAQqB,GAOV,OAJA/B,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,SACR,CAACH,KAGF,+BACE,SAAC,IAAD,CACEe,QAASqB,EAAMrB,QACfH,OAAQwB,EAAMxB,OACdO,KAAK,QACLU,OAAQ,S,UC3DhB,MA1DA,WACE,IAAMhC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MAEbwE,EAAY5E,EAAKS,KAAI,SAAAG,GAAC,OAAIA,EAAEiE,QAE5BC,GAAkB,OAAI,IAAIC,IAAIH,IAC/BjE,QAAO,SAAAC,GAAC,MAAiB,kBAANA,KACnBoE,OAMC9D,EAAU,CACZH,OAAQ,CACN,CACEf,KAPY8E,EAAgBrE,KAChC,SAAAoE,GAAI,OAAI7E,EAAKW,QAAO,SAAAC,GAAC,OAAIA,EAAEiE,OAASA,KAAM/D,YAS1CS,MAAO,CACLC,MAAMC,EAAAA,EAAAA,GAAE,+BACRC,MAAO,UAETL,MAAO,CACLC,KAAM,MACNU,OAAQ,KAEVJ,YAAa,CACXqD,IAAK,CACHC,aAAc,EACdC,YAAY,IAGhBX,WAAY,CACVY,SAAS,GAEXC,MAAO,CACLC,WAAYR,IAQhB,OAJAzE,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,SACR,CAACH,KAGF,+BACE,SAAC,IAAD,CACEe,QAASA,EACTH,OAAQG,EAAQH,OAChBO,KAAK,MACLU,OAAQ,S,ktmaCmGhB,EAhKY,CACV,CACEuD,MAAO,UACPC,OAAQ,WACRC,UAAW,yDACXC,MAAO,IAET,CACEH,MAAO,UACPC,OAAQ,YACRC,UAAW,2EACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,aACRC,UAAW,qEACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,SACRC,UAAW,wCACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,SACRC,UAAW,mGACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,UACRC,UAAW,mDACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,kBACRC,UAAW,oGACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,UACRC,UAAW,+DACXC,MAAO,GAET,CACEH,MAAO,UACPC,OAAQ,UACRC,UAAW,+DACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,eACRC,UAAW,qEACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,OACRC,UAAW,mDACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,iBACRC,UAAW,2BACXC,MAAO,IAET,CACEH,MAAO,WACPC,OAAQ,aACRC,UAAW,uFACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,OACRC,UAAW,yDACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,UACRC,UAAW,yDACXC,MAAO,IAET,CACEH,MAAO,WACPC,OAAQ,YACRC,UAAW,2EACXC,MAAO,IAET,CACEH,MAAO,WACPC,OAAQ,QACRC,UAAW,6CACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,UACRC,UAAW,+DACXC,MAAO,IAET,CACEH,MAAO,WACPC,OAAQ,QACRC,UAAW,+DACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,kBACRC,UAAW,qEACXC,MAAO,GAET,CAAEH,MAAO,WAAYC,OAAQ,OAAQC,UAAW,6CAAWC,MAAO,GAClE,CACEH,MAAO,WACPC,OAAQ,WACRC,UAAW,iFACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,YACRC,UAAW,yDACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,QACRC,UAAW,yDACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,cACRC,UAAW,2EACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,eACRC,UAAW,+DACXC,MAAO,GAET,CACEH,MAAO,WACPC,OAAQ,WACRC,UAAW,qEACXC,MAAO,IC7II,SAASC,EAAT,GAAyC,EAArBC,kBAAsB,IACvD,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIMC,GAAaC,EAAAA,EAAAA,KAChBC,OAAOC,EAAAA,KAAQ,SAAAC,GAAC,OAAIA,EAAEV,UACtBW,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,YAKtD,OACE,iCACE,eACEC,MAAO,CACLC,WAAY,+BACZC,WAAY,IACZC,SAAU,GACVC,WAAY,SACZC,MAAO,mBANX,UASGlF,EAAAA,EAAAA,GAAE,oCAEL,SAAC,EAAAmF,cAAD,CACEC,WAAW,cACXC,iBAAkB,CAChBC,OAAQ,EAAE,IAAO,GAAM,GACvBC,MAAO,MAJX,UAOE,SAAC,EAAAC,YAAD,CAAaC,UAAWC,EAAxB,SACG,qBAAGC,YACU3G,KAAI,SAAA4G,GACd,IAAMjB,EAAID,EAAAA,MAAS,SAAAmB,GAAC,OAAIA,EAAE/B,QAAU8B,EAAIE,WAAWhC,SACnD,OACE,SAACiC,EAAA,EAAD,CAASjG,MAAOuE,EAAS2B,OAAK,EAA9B,UACE,SAAC,EAAAC,UAAD,CAEER,UAAWG,EACXM,KAAMvB,EAAIJ,EAAWI,EAAEV,OAAS,OAChCkC,OAAO,UACPC,aAAc,WACZ9B,EAAW,GAAD,OAAIsB,EAAIE,WAAW/B,OAAnB,aAA8BY,EAAEV,SAE5CoC,aAAc,WACZ/B,EAAW,GAAD,OAAIsB,EAAIE,WAAW/B,OAAnB,aAA8BY,EAAEV,SAE5CY,MAAO,CACLyB,QAAS,CACPJ,KAAMvB,EAAIJ,EAAWI,EAAEV,OAAS,OAChCsC,QAAS,QAEXC,MAAO,CACLN,KAAM,OACNK,QAAS,QAEXE,QAAS,CACPP,KAAM,OACNK,QAAS,UArBRX,EAAIc,qBC5B7B,MAnBA,WACE,OACE,iBAAKC,UAAU,oBAAf,WACE,gBAAKA,UAAU,QAAf,UACE,SAAC,EAAD,OAEF,gBAAKA,UAAU,QAAf,UACE,SAAC,EAAD,OAEF,gBAAKA,UAAU,QAAf,UACE,SAAC,EAAD,OAEF,gBAAKA,UAAU,iBAAf,UACE,SAACzC,EAAD,UCfR,EAHuB,WACrB,OAAO,SAAC,EAAD","sources":["components/Statistics/TreeMapChart/TreeMapChart.jsx","components/Statistics/DonutChart/DonutChart.jsx","components/Statistics/BarChart/BarChart.jsx","components/Statistics/MapChart/ukrRegion.js","components/Statistics/MapChart/MapChart.jsx","components/Statistics/Statistics.jsx","views/StatisticsView.jsx"],"sourcesContent":["import ReactApexChart from 'react-apexcharts';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  getAllPaleosoilPoint,\r\n  fetchPaleosoilPoint,\r\n} from '../../../redux/paleosoil/index';\r\nimport { t } from 'i18next';\r\n\r\nfunction TreeMapChart() {\r\n  const data = useSelector(getAllPaleosoilPoint);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPaleosoilPoint());\r\n  }, [dispatch]);\r\n\r\n  const periodHolocene = [\r\n    'AL - Allerod',\r\n    'AT - Atlantic',\r\n    'BL - Bolling',\r\n    'PB - Preboreal',\r\n    'SA - Subatlantic',\r\n    'SB - Subboreal',\r\n    'ВО - Boreal',\r\n  ];\r\n\r\n  let amountPeriod = periodHolocene.map(\r\n    period => data.filter(e => e.period_holocene === period).length,\r\n  );\r\n\r\n  const series = [\r\n    {\r\n      data: [\r\n        {\r\n          x: periodHolocene[0],\r\n          y: amountPeriod[0],\r\n        },\r\n        {\r\n          x: periodHolocene[1],\r\n          y: amountPeriod[1],\r\n        },\r\n        {\r\n          x: periodHolocene[2],\r\n          y: amountPeriod[2],\r\n        },\r\n        {\r\n          x: periodHolocene[3],\r\n          y: amountPeriod[3],\r\n        },\r\n        {\r\n          x: periodHolocene[4],\r\n          y: amountPeriod[4],\r\n        },\r\n        {\r\n          x: periodHolocene[5],\r\n          y: amountPeriod[5],\r\n        },\r\n        {\r\n          x: periodHolocene[6],\r\n          y: amountPeriod[6],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const options = {\r\n    legend: {\r\n      show: false,\r\n    },\r\n    chart: {\r\n      type: 'treemap',\r\n    },\r\n    title: {\r\n      text: t('statistics.title.numberPeriod'),\r\n      align: 'center',\r\n    },\r\n    colors: [\r\n      '#3B93A5',\r\n      '#F7B844',\r\n      '#ADD8C7',\r\n      '#EC3C65',\r\n      '#CDD7B6',\r\n      '#C1F666',\r\n      '#D43F97',\r\n    ],\r\n    plotOptions: {\r\n      treemap: {\r\n        distributed: true,\r\n        enableShades: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"treemap\"\r\n        height={320}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeMapChart;\r\n","import ReactApexChart from 'react-apexcharts';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  getAllPaleosoilPoint,\r\n  fetchPaleosoilPoint,\r\n} from '../../../redux/paleosoil/index';\r\nimport { t } from 'i18next';\r\n\r\nfunction DonutChart() {\r\n  const data = useSelector(getAllPaleosoilPoint);\r\n  const dispatch = useDispatch();\r\n\r\n  const naturalZoneUa = [\r\n    'Лісостеп',\r\n    'Мішані ліси',\r\n    'Степ',\r\n    'Широколистих лісів',\r\n    'Кримські гори ',\r\n    'Українські Карпати',\r\n  ];\r\n\r\n  const naturalZonesEng = [\r\n    'Broad-leaved forests',\r\n    'Forest-steppe',\r\n    'Mixed (coniferous-and-broad-leaved) woods',\r\n    'Steppe',\r\n    'Crimean Mountains',\r\n    'Ukraine Carpathians',\r\n  ];\r\n\r\n  const naturalZone =\r\n    localStorage.getItem('lng') !== 'en' ? naturalZoneUa : naturalZonesEng;\r\n\r\n  let amountZone = naturalZone.map(\r\n    zone => data.filter(e => e.natural_zones === zone).length,\r\n  );\r\n\r\n  const donut = {\r\n    options: {\r\n      legend: {\r\n        show: false,\r\n      },\r\n      chart: {\r\n        type: 'donut',\r\n        chart: {\r\n          toolbar: {\r\n            show: true,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            tools: {\r\n              download: true,\r\n              selection: true,\r\n              zoom: true,\r\n              zoomin: true,\r\n              zoomout: true,\r\n              pan: true,\r\n              reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n              customIcons: [],\r\n            },\r\n            export: {\r\n              csv: {\r\n                filename: undefined,\r\n                columnDelimiter: ',',\r\n                headerCategory: 'category',\r\n                headerValue: 'value',\r\n                dateFormatter(timestamp) {\r\n                  return new Date(timestamp).toDateString();\r\n                },\r\n              },\r\n              svg: {\r\n                filename: undefined,\r\n              },\r\n              png: {\r\n                filename: undefined,\r\n              },\r\n            },\r\n            autoSelected: 'zoom',\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        text: t('statistics.title.numberZone'),\r\n        align: 'center',\r\n      },\r\n      colors: [\r\n        '#3B93A5',\r\n        '#F7B844',\r\n        '#ADD8C7',\r\n        '#EC3C65',\r\n        '#CDD7B6',\r\n        '#C1F666',\r\n      ],\r\n      plotOptions: {\r\n        pie: {\r\n          distributed: true,\r\n          enableShades: false,\r\n          startAngle: 0,\r\n          endAngle: 360,\r\n          expandOnClick: true,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n          customScale: 1,\r\n        },\r\n      },\r\n      labels: naturalZone,\r\n      dataLabels: {\r\n        dropShadow: {\r\n          blur: 3,\r\n          opacity: 0.8,\r\n        },\r\n      },\r\n    },\r\n    series: amountZone,\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPaleosoilPoint());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ReactApexChart\r\n        options={donut.options}\r\n        series={donut.series}\r\n        type=\"donut\"\r\n        height={320}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DonutChart;\r\n","import ReactApexChart from 'react-apexcharts';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  getAllPaleosoilPoint,\r\n  fetchPaleosoilPoint,\r\n} from '../../../redux/paleosoil/index';\r\nimport { t } from 'i18next';\r\n\r\nfunction BarChart() {\r\n  const data = useSelector(getAllPaleosoilPoint);\r\n  const dispatch = useDispatch();\r\n\r\n  let listYears = data.map(e => e.year);\r\n\r\n  let categoriesYears = [...new Set(listYears)]\r\n    .filter(e => typeof e === 'number')\r\n    .sort();\r\n\r\n  let amountYears = categoriesYears.map(\r\n    year => data.filter(e => e.year === year).length,\r\n  );\r\n\r\n  var options = {\r\n    series: [\r\n      {\r\n        data: amountYears,\r\n      },\r\n    ],\r\n    title: {\r\n      text: t('statistics.title.numberYear'),\r\n      align: 'center',\r\n    },\r\n    chart: {\r\n      type: 'bar',\r\n      height: 350,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 4,\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    xaxis: {\r\n      categories: categoriesYears,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPaleosoilPoint());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={options.series}\r\n        type=\"bar\"\r\n        height={450}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","const Ukr = [\r\n  {\r\n    GID_1: 'UKR.1_1',\r\n    NAME_1: 'Cherkasy',\r\n    NL_NAME_1: 'Черкаська',\r\n    value: 27,\r\n  },\r\n  {\r\n    GID_1: 'UKR.2_1',\r\n    NAME_1: 'Chernihiv',\r\n    NL_NAME_1: 'Чернігівська',\r\n    value: 8,\r\n  },\r\n  {\r\n    GID_1: 'UKR.3_1',\r\n    NAME_1: 'Chernivtsi',\r\n    NL_NAME_1: 'Чернівецька',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.4_1',\r\n    NAME_1: 'Crimea',\r\n    NL_NAME_1: 'АР Крим',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.5_1',\r\n    NAME_1: 'Dnipro',\r\n    NL_NAME_1: 'Дніпропетровська',\r\n    value: 1,\r\n  },\r\n  {\r\n    GID_1: 'UKR.6_1',\r\n    NAME_1: 'Donetsk',\r\n    NL_NAME_1: 'Донецька',\r\n    value: 3,\r\n  },\r\n  {\r\n    GID_1: 'UKR.7_1',\r\n    NAME_1: 'Ivano-Frankivsk',\r\n    NL_NAME_1: 'Івано-Франківська',\r\n    value: 2,\r\n  },\r\n  {\r\n    GID_1: 'UKR.8_1',\r\n    NAME_1: 'Kharkiv',\r\n    NL_NAME_1: 'Харківська',\r\n    value: 2,\r\n  },\r\n  {\r\n    GID_1: 'UKR.9_1',\r\n    NAME_1: 'Kherson',\r\n    NL_NAME_1: 'Херсонська',\r\n    value: 1,\r\n  },\r\n  {\r\n    GID_1: 'UKR.10_1',\r\n    NAME_1: 'Khmelnytskyy',\r\n    NL_NAME_1: 'Хмельницька',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.11_1',\r\n    NAME_1: 'Kyiv',\r\n    NL_NAME_1: 'Київська',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.12_1',\r\n    NAME_1: 'Kyiv сity',\r\n    NL_NAME_1: 'Київ',\r\n    value: 21,\r\n  },\r\n  {\r\n    GID_1: 'UKR.13_1',\r\n    NAME_1: 'Kirovohrad',\r\n    NL_NAME_1: 'Кіровоградська',\r\n    value: 8,\r\n  },\r\n  {\r\n    GID_1: 'UKR.14_1',\r\n    NAME_1: 'Lviv',\r\n    NL_NAME_1: 'Львівська',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.15_1',\r\n    NAME_1: 'Luhansk',\r\n    NL_NAME_1: 'Луганська',\r\n    value: 13,\r\n  },\r\n  {\r\n    GID_1: 'UKR.16_1',\r\n    NAME_1: 'Mykolayiv',\r\n    NL_NAME_1: 'Миколаївська',\r\n    value: 10,\r\n  },\r\n  {\r\n    GID_1: 'UKR.17_1',\r\n    NAME_1: 'Odesa',\r\n    NL_NAME_1: 'Одеська',\r\n    value: 5,\r\n  },\r\n  {\r\n    GID_1: 'UKR.18_1',\r\n    NAME_1: 'Poltava',\r\n    NL_NAME_1: 'Полтавська',\r\n    value: 31,\r\n  },\r\n  {\r\n    GID_1: 'UKR.19_1',\r\n    NAME_1: 'Rivne',\r\n    NL_NAME_1: 'Рівненська',\r\n    value: 3,\r\n  },\r\n  {\r\n    GID_1: 'UKR.20_1',\r\n    NAME_1: 'Sevastopol city',\r\n    NL_NAME_1: 'Севастополь',\r\n    value: 0,\r\n  },\r\n  { GID_1: 'UKR.21_1', NAME_1: 'Sumy', NL_NAME_1: 'Сумська', value: 2 },\r\n  {\r\n    GID_1: 'UKR.22_1',\r\n    NAME_1: 'Ternopil',\r\n    NL_NAME_1: 'Тернопільська',\r\n    value: 8,\r\n  },\r\n  {\r\n    GID_1: 'UKR.24_1',\r\n    NAME_1: 'Vinnytsia',\r\n    NL_NAME_1: 'Вінницька',\r\n    value: 7,\r\n  },\r\n  {\r\n    GID_1: 'UKR.25_1',\r\n    NAME_1: 'Volyn',\r\n    NL_NAME_1: 'Волинська',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.23_1',\r\n    NAME_1: 'Zakarpattia',\r\n    NL_NAME_1: 'Закарпатська',\r\n    value: 0,\r\n  },\r\n  {\r\n    GID_1: 'UKR.26_1',\r\n    NAME_1: 'Zaporizhzhia',\r\n    NL_NAME_1: 'Запорізька',\r\n    value: 3,\r\n  },\r\n  {\r\n    GID_1: 'UKR.27_1',\r\n    NAME_1: 'Zhytomyr',\r\n    NL_NAME_1: 'Житомирська',\r\n    value: 6,\r\n  },\r\n];\r\n\r\nexport default Ukr;\r\n","import React, { useState } from 'react';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleQuantile } from 'd3-scale';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { useEffect } from 'react';\r\n// import {\r\n//   getAllPaleosoilPoint,\r\n//   fetchPaleosoilPoint,\r\n// } from '../../../redux/paleosoil/index';\r\nimport { t } from 'i18next';\r\n\r\nimport geoRegion from '../../../data/gadm41_UKR_1.json';\r\nimport Ukr from './ukrRegion';\r\n\r\nexport default function MapChart({ setTooltipContent }) {\r\n  const [content, setContent] = useState('');\r\n  // const data = useSelector(getAllPaleosoilPoint);\r\n  // const dispatch = useDispatch();\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(Ukr.map(d => d.value))\r\n    .range(['#ffffcc', '#a1dab4', '#41b6c4', '#2c7fb8', '#253494']);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchPaleosoilPoint());\r\n  // }, [dispatch]);\r\n  return (\r\n    <>\r\n      <h4\r\n        style={{\r\n          fontFamily: 'Helvetica, Arial, sans-serif',\r\n          fontWeight: 900,\r\n          fontSize: 14,\r\n          textAnchor: 'middle',\r\n          color: 'rgb(55, 61, 63)',\r\n        }}\r\n      >\r\n        {t('statistics.title.numberRegion')}\r\n      </h4>\r\n      <ComposableMap\r\n        projection=\"geoMercator\"\r\n        projectionConfig={{\r\n          rotate: [-31.0, -49.0, 0],\r\n          scale: 3600,\r\n        }}\r\n      >\r\n        <Geographies geography={geoRegion}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const d = Ukr.find(s => s.GID_1 === geo.properties.GID_1);\r\n              return (\r\n                <Tooltip title={content} arrow>\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={d ? colorScale(d.value) : '#EEE'}\r\n                    stroke=\"#D6D6DA\"\r\n                    onMouseEnter={() => {\r\n                      setContent(`${geo.properties.NAME_1}: ${d.value}`);\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setContent(`${geo.properties.NAME_1}: ${d.value}`);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill: d ? colorScale(d.value) : '#555',\r\n                        outline: 'none',\r\n                      },\r\n                      hover: {\r\n                        fill: '#F53',\r\n                        outline: 'none',\r\n                      },\r\n                      pressed: {\r\n                        fill: '#E42',\r\n                        outline: 'none',\r\n                      },\r\n                    }}\r\n                  />\r\n                </Tooltip>\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n}\r\n","import TreeMapChart from './TreeMapChart/TreeMapChart';\r\nimport DonutChart from './DonutChart/DonutChart';\r\nimport BarChart from './BarChart/BarChart';\r\nimport MapChart from './MapChart/MapChart';\r\n\r\nimport './Statistics.css';\r\n\r\nfunction Statistics() {\r\n  return (\r\n    <div className=\"analyticContainer\">\r\n      <div className=\"chart\">\r\n        <TreeMapChart />\r\n      </div>\r\n      <div className=\"chart\">\r\n        <DonutChart />\r\n      </div>\r\n      <div className=\"chart\">\r\n        <BarChart />\r\n      </div>\r\n      <div className=\"chart mapChart\">\r\n        <MapChart />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import Statistics from '../components/Statistics/Statistics';\r\n\r\nconst StatisticsView = () => {\r\n  return <Statistics />;\r\n};\r\nexport default StatisticsView;\r\n"],"names":["data","useSelector","getAllPaleosoilPoint","dispatch","useDispatch","useEffect","fetchPaleosoilPoint","periodHolocene","amountPeriod","map","period","filter","e","period_holocene","length","series","x","y","options","legend","show","chart","type","title","text","t","align","colors","plotOptions","treemap","distributed","enableShades","height","naturalZone","localStorage","getItem","amountZone","zone","natural_zones","donut","toolbar","offsetX","offsetY","tools","download","selection","zoom","zoomin","zoomout","pan","reset","customIcons","export","csv","filename","undefined","columnDelimiter","headerCategory","headerValue","dateFormatter","timestamp","Date","toDateString","svg","png","autoSelected","pie","startAngle","endAngle","expandOnClick","customScale","labels","dataLabels","dropShadow","blur","opacity","listYears","year","categoriesYears","Set","sort","bar","borderRadius","horizontal","enabled","xaxis","categories","GID_1","NAME_1","NL_NAME_1","value","MapChart","setTooltipContent","useState","content","setContent","colorScale","scaleQuantile","domain","Ukr","d","range","style","fontFamily","fontWeight","fontSize","textAnchor","color","ComposableMap","projection","projectionConfig","rotate","scale","Geographies","geography","geoRegion","geographies","geo","s","properties","Tooltip","arrow","Geography","fill","stroke","onMouseEnter","onMouseLeave","default","outline","hover","pressed","rsmKey","className"],"sourceRoot":""}
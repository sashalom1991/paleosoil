{"version":3,"file":"static/js/887.a55fa5ca.chunk.js","mappings":"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","sources":["components/TablePaleoModal/TablePaleoModal.jsx","components/TablePaleo/TablePaleo.jsx","views/TableView.jsx"],"sourcesContent":["import { useEffect, Suspense } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Bars } from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./TablePaleoModal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onClose, info }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  function img(info) {\r\n    const url = info.Foto.split(\"=\");\r\n    const srcUrl = `https://drive.google.com/uc?export=view&id=${url[1]}`;\r\n    return srcUrl;\r\n  }\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal__content\">\r\n        <Suspense fallback={<Bars color=\"#00BFFF\" height={80} width={80} />}>\r\n          <a\r\n            href={info.Foto}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"ModalRefImg\"\r\n          >\r\n            <img src={img(info)} alt=\"Object Foto\" className=\"ModalImg\" />\r\n          </a>\r\n        </Suspense>\r\n\r\n        <ul className=\"List_modal\">\r\n          <li>\r\n            <b>Поселення:</b> {info.Settlement}\r\n          </li>\r\n          <li>\r\n            <b>Район:</b> {info.District}\r\n          </li>\r\n          <li>\r\n            <b>Область:</b> {info.Region}\r\n          </li>\r\n          <li>\r\n            <b>Широта:</b> {info.Y}\r\n          </li>\r\n          <li>\r\n            <b>Довгота:</b> {info.X}\r\n          </li>\r\n          <li>\r\n            <b>Природна зона:</b> {info.Natural_ar}\r\n          </li>\r\n          <li>\r\n            <b>Край/провінція:</b> {info.Land_Provi}\r\n          </li>\r\n          <li>\r\n            <b>Приуроченість(природна/історична):</b> {info.Location}\r\n          </li>\r\n          <li>\r\n            <b>Обє'кт (природний/історичний):</b> {info.Object}\r\n          </li>\r\n          <li>\r\n            <b>Дослідник:</b> {info.Researcher}\r\n          </li>\r\n          <li>\r\n            <b>Рік вивчення:</b> {info.Year}\r\n          </li>\r\n          <li>\r\n            <b>Використані методи дослідження:</b> {info.Research_m}\r\n          </li>\r\n          <li>\r\n            <b>Сучасний тип ґрунту:</b> {info.Modern_soi}\r\n          </li>\r\n          <li>\r\n            <b>Потужність розірзу (м.):</b> {info.Soil_power}\r\n          </li>\r\n          <li>\r\n            <b>Похований ґрунт:</b> {info.Buried_soi}\r\n          </li>\r\n          <li>\r\n            <b>Потужність (м.):</b> {info.Soil2_powe}\r\n          </li>\r\n          <li>\r\n            <b>Хроноітервал голоцену:</b> {info.Holocene_i}\r\n          </li>\r\n          <li>\r\n            <b>Археологічне датування/ датування:</b> {info.Archeo_dat}\r\n          </li>\r\n          {/* <li><b>Фото:</b> <a href={info.Foto} target='_blank' rel=\"noopener noreferrer\">{info.Foto}</a></li> */}\r\n          <li>\r\n            <b>Література:</b> {info.Literature}\r\n          </li>\r\n          <li>\r\n            <b>Документ PDF:</b>\r\n            <a href={info.PDF} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {info.PDF}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <CloseIcon onClick={() => onClose()} className=\"BtnClose\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Button } from \"@mui/material\";\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\r\nimport Box from \"@mui/material/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport TablePaleoModal from \"../TablePaleoModal/TablePaleoModal\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport dataPaleo from \"../../Data/paleosoil.json\";\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst columns = [\r\n  { id: \"id\", label: \"№\", minWidth: 70, align: \"left\" },\r\n  { id: \"settlement\", label: \"Населений пункт\", minWidth: 100, align: \"left\" },\r\n  { id: \"district\", label: \"Район\", minWidth: 100, align: \"left\" },\r\n  { id: \"region\", label: \"Область\", minWidth: 100, align: \"left\" },\r\n  { id: \"size\", label: \"Природна зона\", minWidth: 100, align: \"left\" },\r\n  { id: \"reshearch\", label: \"Дослідник\", minWidth: 100, align: \"left\" },\r\n  { id: \"year\", label: \"Рік вивчення\", minWidth: 100, align: \"left\" },\r\n];\r\n\r\n// Styling table\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableCell: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nlet Body = document.querySelector('body')\r\n\r\nexport default function TablePaleo() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [infoResearch, setInfoResearch] = React.useState({});\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n    console.log(showModal)\r\n    if(showModal ==='false'){\r\n      Body.style.overflowY = 'auto';\r\n    }else{\r\n      Body.style.overflowY = 'hidden';\r\n    }\r\n  };\r\n\r\n  const onClickItem = (e) => {\r\n    setInfoResearch(e);\r\n    toggleModal();\r\n  };\r\n  const emptyRows =\r\n    page > 0\r\n      ? Math.max(0, (1 + page) * rowsPerPage - dataPaleo.features.length)\r\n      : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <TablePaleoModal onClose={toggleModal} info={infoResearch} />\r\n      )}\r\n      <TableContainer component={Paper}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{\r\n                    minWidth: column.minWidth,\r\n                    fontWeight: 800,\r\n                    padding: \"5px\",\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? dataPaleo.features.slice(\r\n                  page * rowsPerPage,\r\n                  page * rowsPerPage + rowsPerPage,\r\n                )\r\n              : dataPaleo.features\r\n            ).map((rowData) => (\r\n              <TableRow key={rowData.properties.id}>\r\n                <TableCell\r\n                  style={{ minWidth: 70 }}\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.id}\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 100 }}\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.Settlement}\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 100 }}\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.District}\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 100 }}\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.Region}\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 100 }}\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.Natural_ar}\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 100 }}\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.Researcher}\r\n                </TableCell>\r\n                <TableCell\r\n                  style={{ minWidth: 70 }}\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                >\r\n                  {rowData.properties.Year}\r\n                </TableCell>\r\n                <TableCell style={{ minWidth: 80 }} align=\"left\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    onClick={() => onClickItem(rowData.properties)}\r\n                  >\r\n                    Інфо\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          colSpan={3}\r\n          count={dataPaleo.features.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          SelectProps={{\r\n            inputProps: {\r\n              \"aria-label\": \"rows per page\",\r\n            },\r\n            native: true,\r\n          }}\r\n          style={{ minWidth: \"max-content\" }}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          ActionsComponent={TablePaginationActions}\r\n        />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import TablePaleo from \"../components/TablePaleo/TablePaleo\"\r\n\r\nconst TableView = () => {\r\n    return ( \r\n        <TablePaleo/>\r\n    )\r\n}\r\n\r\nexport default TableView"],"names":["modalRoot","document","querySelector","Modal","onClose","info","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","onClick","event","currentTarget","target","Suspense","fallback","color","height","width","href","Foto","rel","src","url","split","img","alt","Settlement","District","Region","Y","X","Natural_ar","Land_Provi","Location","Object","Researcher","Year","Research_m","Modern_soi","Soil_power","Buried_soi","Soil2_powe","Holocene_i","Archeo_dat","Literature","PDF","Close","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","Box","sx","flexShrink","ml","IconButton","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","columns","id","label","minWidth","align","useStyles","makeStyles","table","tableCell","padding","Body","TablePaleo","classes","React","setPage","setRowsPerPage","showModal","setShowModal","infoResearch","setInfoResearch","toggleModal","console","log","style","overflowY","emptyRows","dataPaleo","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","fontWeight","TableBody","rowData","properties","Button","variant","colSpan","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","value","ActionsComponent"],"sourceRoot":""}
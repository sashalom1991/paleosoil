{"version":3,"file":"static/js/887.0cdb123d.chunk.js","mappings":"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","sources":["components/TablePaleoModal/TablePaleoModal.jsx","components/TablePaleo/TablePaleo.jsx","views/TableView.jsx"],"sourcesContent":["import { useEffect, Suspense } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Bars } from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './TablePaleoModal.css';\r\nimport { t } from 'i18next';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nlet Body = document.querySelector('body');\r\n\r\nexport default function Modal({ onClose, info }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n      Body.style.overflowY = 'auto';\r\n      console.log('body');\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n      Body.style.overflowY = 'auto';\r\n      console.log('body');\r\n    }\r\n  };\r\n\r\n  const handelClickBtn = () => {\r\n    onClose();\r\n    Body.style.overflowY = 'auto';\r\n  };\r\n\r\n  function img(info) {\r\n    // default img https://drive.google.com/file/d/1Hb7Hb0qgDDdvvF2TbADAv1HsmAgCOFvr/view?usp=sharing\r\n    if (typeof info.small_foto === 'string') {\r\n      const url = info.small_foto.split('/');\r\n      const srcUrl = `https://drive.google.com/uc?export=view&id=${url[5]}`;\r\n      return srcUrl;\r\n    } else {\r\n      return `https://drive.google.com/uc?export=view&id=1Hb7Hb0qgDDdvvF2TbADAv1HsmAgCOFvr`;\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal__content\">\r\n        <Suspense fallback={<Bars color=\"#00BFFF\" height={80} width={80} />}>\r\n          <a\r\n            href={info.foto}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"ModalRefImg\"\r\n          >\r\n            <img src={img(info)} alt=\"Object Foto\" className=\"ModalImg\" />\r\n          </a>\r\n        </Suspense>\r\n\r\n        <ul className=\"List_modal\">\r\n          <li>\r\n            <b>{t('infoPaleo.settl')}</b> {info.settlement}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.district')}</b> {info.district}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.region')}</b> {info.region}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.lat')}</b> {info.y}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.long')}</b> {info.x}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.natZones')}</b> {info.natural_zones}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.physLand')}</b> {info.physiographical_l}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.locality')}</b> {info.locality}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.object')}</b> {info.object}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.researcher')}</b> {info.researcher}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.year')}</b> {info.year}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.researMethod')}</b> {info.research_methods}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.modernSoil')}</b> {info.modern_soil}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.soilProM')}</b> {info.soil_m}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.burSoil')}</b> {info.buried_soil}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.paleosoilM')}</b> {info.paleosoil_m}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.pHoloc')}</b> {info.period_holocene}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.archDat')}</b> {info.arch_dating}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.references')}</b> {info.references}\r\n          </li>\r\n          <li>\r\n            <b>{t('infoPaleo.pdf')}</b>\r\n            <a href={info.pdf} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {info.pdf}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <CloseIcon onClick={handelClickBtn} className=\"BtnClose\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Paper,\r\n  Button,\r\n} from '@mui/material';\r\nimport { ThreeCircles } from 'react-loader-spinner';\r\nimport TablePaleoModal from '../TablePaleoModal/TablePaleoModal';\r\nimport TablePaginationActions from '@mui/material/TablePagination/TablePaginationActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport {\r\n  getAllPaleosoilPoint,\r\n  fetchPaleosoilPoint,\r\n  deletePaleosoilPoint,\r\n  getLoading,\r\n} from '../../redux/paleosoil';\r\n// import i18next from 'i18next';\r\n\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst columns = [\r\n  { id: 'id', label: '№', minWidth: 70, align: 'left' },\r\n  { id: 'settlement', label: 'Поселення', minWidth: 100, align: 'left' },\r\n  { id: 'district', label: 'Район', minWidth: 100, align: 'left' },\r\n  { id: 'region', label: 'Область', minWidth: 100, align: 'left' },\r\n  { id: 'natural_zones', label: 'Природна зона', minWidth: 100, align: 'left' },\r\n  { id: 'researcher', label: 'Дослідник', minWidth: 100, align: 'left' },\r\n  { id: 'year', label: 'Рік вивчення', minWidth: 100, align: 'left' },\r\n];\r\n\r\n// const columnsEn = [\r\n//   { id: 'id', label: '№', minWidth: 70, align: 'left' },\r\n//   { id: 'settlement', label: 'Settlement', minWidth: 100, align: 'left' },\r\n//   { id: 'region', label: 'Region', minWidth: 100, align: 'left' },\r\n//   { id: 'natural_zones', label: 'Natural zones', minWidth: 100, align: 'left' },\r\n//   { id: 'researcher', label: 'Researcher', minWidth: 100, align: 'left' },\r\n//   { id: 'year', label: 'Year of research', minWidth: 100, align: 'left' },\r\n// ];\r\n\r\n// Styling table\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableCell: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nlet Body = document.querySelector('body');\r\n\r\n// Table\r\nexport default function TablePaleo() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const data = useSelector(getAllPaleosoilPoint);\r\n  const loading = useSelector(getLoading);\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [infoResearch, setInfoResearch] = React.useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n    if (showModal === 'false') {\r\n      Body.style.overflowY = 'auto';\r\n    } else {\r\n      Body.style.overflowY = 'hidden';\r\n    }\r\n  };\r\n\r\n  const onClickItem = e => {\r\n    setInfoResearch(e);\r\n    toggleModal();\r\n  };\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPaleosoilPoint());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <TablePaleoModal onClose={toggleModal} info={infoResearch} />\r\n      )}\r\n      {loading ? (\r\n        <ThreeCircles\r\n          height=\"100\"\r\n          width=\"100\"\r\n          color=\"#4fa94d\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"\"\r\n          visible={true}\r\n          ariaLabel=\"three-circles-rotating\"\r\n          outerCircleColor=\"\"\r\n          innerCircleColor=\"\"\r\n          middleCircleColor=\"\"\r\n        />\r\n      ) : (\r\n        <TableContainer component={Paper}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{\r\n                      minWidth: column.minWidth,\r\n                      fontWeight: 800,\r\n                      padding: '5px',\r\n                    }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n                ? data.slice(\r\n                    page * rowsPerPage,\r\n                    page * rowsPerPage + rowsPerPage,\r\n                  )\r\n                : data\r\n              ).map(rowData => (\r\n                <TableRow key={rowData._id}>\r\n                  <TableCell\r\n                    style={{ minWidth: 70 }}\r\n                    align=\"center\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.id}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.settlement}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.district}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.region}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.natural_zones}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 100 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.researcher}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ minWidth: 70 }}\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                  >\r\n                    {rowData.year}\r\n                  </TableCell>\r\n                  <TableCell style={{ minWidth: 80 }} align=\"left\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"success\"\r\n                      onClick={() => onClickItem(rowData)}\r\n                    >\r\n                      Іnfo\r\n                    </Button>\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      sx={{ color: '#FF0000' }}\r\n                      onClick={() =>\r\n                        dispatch(deletePaleosoilPoint(rowData._id))\r\n                      }\r\n                      style={\r\n                        isLoggedIn ? { display: 'inline' } : { display: 'none' }\r\n                      }\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            component=\"div\"\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            colSpan={3}\r\n            count={data.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            SelectProps={{\r\n              inputProps: {\r\n                'aria-label': 'rows per page',\r\n              },\r\n              native: true,\r\n            }}\r\n            style={{ minWidth: 'max-content' }}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            ActionsComponent={TablePaginationActions}\r\n          />\r\n        </TableContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import TablePaleo from '../components/TablePaleo/TablePaleo';\r\n\r\nconst TableView = () => {\r\n  return (\r\n    <>\r\n      <TablePaleo />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableView;\r\n"],"names":["modalRoot","document","querySelector","Body","Modal","onClose","info","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","style","overflowY","console","log","createPortal","className","onClick","event","currentTarget","target","Suspense","fallback","color","height","width","href","foto","rel","src","small_foto","url","split","img","alt","t","settlement","district","region","y","x","natural_zones","physiographical_l","locality","object","researcher","year","research_methods","modern_soil","soil_m","buried_soil","paleosoil_m","period_holocene","arch_dating","references","pdf","Close","columns","id","label","minWidth","align","useStyles","makeStyles","theme","table","tableCell","padding","TablePaleo","classes","React","page","setPage","rowsPerPage","setRowsPerPage","data","useSelector","getAllPaleosoilPoint","loading","getLoading","isLoggedIn","authSelectors","showModal","setShowModal","infoResearch","setInfoResearch","dispatch","useDispatch","toggleModal","emptyRows","Math","max","length","fetchPaleosoilPoint","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","fontWeight","TableBody","slice","rowData","Button","variant","IconButton","sx","deletePaleosoilPoint","_id","display","Delete","colSpan","TablePagination","rowsPerPageOptions","count","SelectProps","inputProps","native","onPageChange","newPage","onRowsPerPageChange","parseInt","value","ActionsComponent","TablePaginationActions"],"sourceRoot":""}